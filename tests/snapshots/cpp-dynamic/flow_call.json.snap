---
source: tests/common/mod.rs
expression: content
---
{
  "Public APIs flow": [
    {
      "name": "accessWebcam",
      "syscalls": [
        "open64",
        "std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)",
        "std::ostream::operator<<(std::ostream& (*)(std::ostream&))",
        "memset",
        "memset",
        "memcpy",
        "ioctl",
        "std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)",
        "std::ostream::operator<<(std::ostream& (*)(std::ostream&))",
        "close",
        "read",
        "std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)",
        "std::ostream::operator<<(std::ostream& (*)(std::ostream&))",
        "close",
        "close"
      ]
    },
    {
      "name": "accessNetwork",
      "syscalls": [
        "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(std::allocator<char> const&)",
        "cpr::Url::Url(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)",
        "cpr::Response cpr::Get<cpr::Url>(cpr::Url&&)",
        "cpr::Url::~Url()",
        "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()",
        "std::__new_allocator<char>::~__new_allocator()",
        "std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)",
        "std::basic_ostream<char, std::char_traits<char> >& std::operator<< <char, std::char_traits<char>, std::allocator<char> >(std::basic_ostream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)",
        "std::ostream::operator<<(std::ostream& (*)(std::ostream&))",
        "cpr::Url::~Url()",
        "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()",
        "std::__new_allocator<char>::~__new_allocator()",
        "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()",
        "cpr::Response::~Response()",
        "std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)",
        "std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)",
        "std::ostream::operator<<(long)",
        "std::ostream::operator<<(std::ostream& (*)(std::ostream&))",
        "cpr::Response::~Response()"
      ]
    },
    {
      "name": "writeOnDrive",
      "syscalls": [
        "std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)",
        "std::basic_ofstream<char, std::char_traits<char> >::basic_ofstream(char const*, std::_Ios_Openmode)",
        "std::basic_ofstream<char, std::char_traits<char> >::is_open()",
        "std::ostream::write(char const*, long)",
        "std::basic_ofstream<char, std::char_traits<char> >::close()",
        "std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)",
        "std::ostream::operator<<(std::ostream& (*)(std::ostream&))",
        "std::basic_ofstream<char, std::char_traits<char> >::~basic_ofstream()",
        "std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)",
        "std::ostream::operator<<(std::ostream& (*)(std::ostream&))",
        "std::basic_ofstream<char, std::char_traits<char> >::~basic_ofstream()"
      ]
    },
    {
      "name": "turnLampOff",
      "syscalls": []
    },
    {
      "name": "turnLampOn",
      "syscalls": []
    }
  ]
}
